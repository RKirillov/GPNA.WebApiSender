
syntax = "proto3";

option csharp_namespace = "GPNA.WebApiSender";
//определяем название пакета,чтобы небыло конфликтов
package greet;

// импортируем нужные пакеты
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

// определение сервиса -сервера  кто отвечает клиенту
service GreeterGrpc {
  // который получает сообщение Request
  // и отправляет сообщение Response
  //контракт на коммуникации
  rpc Transfer ( Request) returns (stream Response);
}


//Ответ клиенту

message Response {
    repeated protoTagValueDouble items = 1;
}

message protoTagValueDouble {
        //     Идентификатор типа тега
        int64 TagId = 1;
        //     Метка времени тега в источнике
         google.protobuf.Timestamp DateTime = 2;
        //     Метка времени UTC тега в источнике
         google.protobuf.Timestamp DateTimeUtc = 3;
        //     Метка времени фиксации тега в коллекторе
         google.protobuf.Timestamp TimeStampUtc = 4;
        //     Уровень качества OPC
         int32 OpcQuality = 5;
        //     Полное наименование тэга
         string Tagname = 6;
}
 
//Запрос от клиента
message Request {
}
//Сервис может содержать множество функций, но стоит учитывать, что он обязательно должно принимать какое-то сообщение и возвращать какое-нибудь сообщения. Но при необходимости можно создавать также пустые сообщения.